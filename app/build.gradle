plugins {
    id 'kotlin-multiplatform' version '1.3.72'
    id 'kotlinx-serialization' version '1.3.72'
}
repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-android-extensions'

kotlin {

    def coroutine_version = "1.3.2"
    def ktor_version = "1.2.6"
    def serializer_version = "0.14.0"
    def kotlin_version = "1.3.61"

    targets {
        fromPreset(presets.android, 'android')

        // iPhone simulator    : presets.iosX64
        // real iDevice 32 bit : presets.iosArm32
        // real iDevice 64 bit : presets.iosArm64
        def iosPreset = presets.iosX64
        
        fromPreset(iosPreset, 'ios') {
            binaries {
                framework {
                    // Disable bitcode embedding for the simulator build.
                    if (iosPreset == presets.iosX64) {
                        embedBitcode("disable")
                    }
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutine_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serializer_version"
                implementation "io.ktor:ktor-client-core:$ktor_version"
            }
        }
        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
                implementation "io.mockk:mockk-common:1.9.3"
                implementation "io.ktor:ktor-client-mock:$ktor_version"
            }
        }
        androidMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializer_version"
//                implementation "io.ktor:ktor-client-android:$ktor_version"
                implementation "io.ktor:ktor-client-okhttp:$ktor_version"

                implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
                implementation 'androidx.recyclerview:recyclerview:1.1.0'
                implementation 'com.google.android.material:material:1.1.0'
            }
        }
        androidTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
                implementation "io.mockk:mockk:1.9.3"
                implementation "com.google.truth:truth:1.0.1"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"
            }
        }
        iosMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutine_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serializer_version"
                implementation "io.ktor:ktor-client-ios:$ktor_version"
            }
        }
    }
}

apply from: "../gradle/android_build.gradle"
apply from: "../gradle/ios_copy_framework.gradle"

private String getApiKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('project.properties').newDataInputStream())
    return properties.getProperty('api_key')
}
